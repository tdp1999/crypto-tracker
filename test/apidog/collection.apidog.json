{
  "info": {
    "name": "Crypto Tracker API",
    "description": "API collection for Crypto Tracker application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "description": "Authentication and user identity endpoints",
      "item": [
        {
          "name": "Register",
          "description": "Register a new user to get access to the system",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate unique test email to avoid conflicts",
                  "const testEmail = `test.auth.${Date.now()}@example.com`;",
                  "const testPassword = \"Password123!\";",
                  "",
                  "pm.collectionVariables.set('auth_test_email', testEmail);",
                  "pm.collectionVariables.set('auth_test_password', testPassword);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{auth_test_email}}\",\n  \"password\": \"{{auth_test_password}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "auth",
                "register"
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"test.auth.123456@example.com\",\n    \"password\": \"Password123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "auth",
                    "register"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": true,\n    \"meta\": {}\n}"
            },
            {
              "name": "Email Already Exists",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"existing@example.com\",\n    \"password\": \"Password123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "auth",
                    "register"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 409,\n    \"message\": \"Email already exists\",\n    \"error\": \"Conflict\"\n}"
            },
            {
              "name": "Invalid Email Format",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"invalid-email\",\n    \"password\": \"Password123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "auth",
                    "register"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 400,\n    \"message\": \"Invalid email format\",\n    \"error\": \"Bad Request\"\n}"
            }
          ]
        },
        {
          "name": "Login",
          "description": "Login with email and password to get access token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate unique test email to avoid conflicts",
                  "const testEmail = pm.environment.get(\"DEFAULT_ADMIN_EMAIL\");",
                  "const testPassword = pm.environment.get(\"DEFAULT_ADMIN_PASSWORD\");",
                  "",
                  "pm.collectionVariables.set('auth_test_email', testEmail);",
                  "pm.collectionVariables.set('auth_test_password', testPassword);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has access token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('accessToken');",
                  "    ",
                  "    // Store token for subsequent requests",
                  "    pm.collectionVariables.set('access_token', jsonData.data.accessToken);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{auth_test_email}}\",\n  \"password\": \"{{auth_test_password}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "auth",
                "login"
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"Password123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "auth",
                    "login"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjEyMzQ1Njc4OTAiLCJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJpYXQiOjE1MTYyMzkwMjIsImV4cCI6MTUxNjI0MjYyMn0.12345678901234567890\"\n    },\n    \"meta\": {}\n}"
            },
            {
              "name": "Invalid Credentials",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"WrongPassword\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "auth",
                    "login"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Invalid credentials\",\n    \"error\": \"Unauthorized\"\n}"
            },
            {
              "name": "Invalid Email Format",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"invalid-email\",\n    \"password\": \"Password123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "auth",
                    "login"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 400,\n    \"message\": \"Invalid email format\",\n    \"error\": \"Bad Request\"\n}"
            }
          ]
        },
        {
          "name": "Get Current User",
          "description": "Get information about the currently logged in user",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "auth",
                "me"
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/me",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "auth",
                    "me"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": {\n        \"id\": \"1234567890\",\n        \"email\": \"user@example.com\",\n        \"createdAt\": \"2023-01-01T00:00:00.000Z\",\n        \"updatedAt\": \"2023-01-01T00:00:00.000Z\"\n    },\n    \"meta\": {}\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/me",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "auth",
                    "me"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\",\n    \"error\": \"Unauthorized\"\n}"
            },
            {
              "name": "Invalid Token",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer invalid.token.here"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/auth/me",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "auth",
                    "me"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Invalid token\",\n    \"error\": \"Unauthorized\"\n}"
            }
          ]
        }
      ],
      "_contentHash": "79e9442b42be59263d5ad17390778c7e"
    },
    {
      "name": "Provider",
      "description": "Cryptocurrency provider API endpoints",
      "item": [
        {
          "name": "Ping Provider",
          "description": "Check if the cryptocurrency data provider is available.",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response indicates provider is online\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/ping",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "provider",
                "ping"
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/ping",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "ping"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": {\n        \"message\": \"pong\",\n        \"timestamp\": \"2023-01-01T00:00:00.000Z\"\n    },\n    \"meta\": {}\n}"
            },
            {
              "name": "Provider Unavailable",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/ping",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "ping"
                  ]
                }
              },
              "status": "Service Unavailable",
              "code": 503,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 503,\n    \"message\": \"Cryptocurrency provider service unavailable\",\n    \"error\": \"Service Unavailable\"\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/ping",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "ping"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\",\n    \"error\": \"Unauthorized\"\n}"
            }
          ]
        },
        {
          "name": "Search Cryptocurrencies",
          "description": "Search for cryptocurrencies by keyword",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains search results\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "    ",
                  "    // If we got results, store the first result's ID for price check",
                  "    if (jsonData.data && jsonData.data.length > 0) {",
                  "        pm.collectionVariables.set('crypto_id', jsonData.data[0].id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/search?key=bitcoin",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "provider",
                "search"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "bitcoin"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/search?key=bitcoin",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "bitcoin"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": [\n        {\n            \"id\": \"bitcoin\",\n            \"name\": \"Bitcoin\",\n            \"symbol\": \"BTC\",\n            \"market_cap_rank\": 1,\n            \"thumb\": \"https://assets.coingecko.com/coins/images/1/thumb/bitcoin.png\",\n            \"large\": \"https://assets.coingecko.com/coins/images/1/large/bitcoin.png\"\n        },\n        {\n            \"id\": \"wrapped-bitcoin\",\n            \"name\": \"Wrapped Bitcoin\",\n            \"symbol\": \"WBTC\",\n            \"market_cap_rank\": 20,\n            \"thumb\": \"https://assets.coingecko.com/coins/images/7598/thumb/wrapped_bitcoin_wbtc.png\",\n            \"large\": \"https://assets.coingecko.com/coins/images/7598/large/wrapped_bitcoin_wbtc.png\"\n        }\n    ],\n    \"meta\": {}\n}"
            },
            {
              "name": "No Results",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/search?key=nonexistentcoin",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "nonexistentcoin"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": [],\n    \"meta\": {}\n}"
            },
            {
              "name": "Invalid Key Parameter",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/search?key=",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": ""
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 400,\n    \"message\": \"Key must be a non-empty string\",\n    \"error\": \"Bad Request\"\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/search?key=bitcoin",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "bitcoin"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\",\n    \"error\": \"Unauthorized\"\n}"
            }
          ]
        },
        {
          "name": "Get Cryptocurrency Prices",
          "description": "Get current prices for specified cryptocurrencies",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains price data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.be.an('object');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/price?ids={{crypto_id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "provider",
                "price"
              ],
              "query": [
                {
                  "key": "ids",
                  "value": "{{crypto_id}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Success (Single Crypto)",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/price?ids=bitcoin",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "price"
                  ],
                  "query": [
                    {
                      "key": "ids",
                      "value": "bitcoin"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": {\n        \"bitcoin\": {\n            \"usd\": 50000.12,\n            \"eur\": 45123.45,\n            \"last_updated_at\": 1640995200\n        }\n    },\n    \"meta\": {}\n}"
            },
            {
              "name": "Success (Multiple Cryptos)",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/price?ids=bitcoin,ethereum",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "price"
                  ],
                  "query": [
                    {
                      "key": "ids",
                      "value": "bitcoin,ethereum"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": {\n        \"bitcoin\": {\n            \"usd\": 50000.12,\n            \"eur\": 45123.45,\n            \"last_updated_at\": 1640995200\n        },\n        \"ethereum\": {\n            \"usd\": 3000.78,\n            \"eur\": 2700.12,\n            \"last_updated_at\": 1640995180\n        }\n    },\n    \"meta\": {}\n}"
            },
            {
              "name": "Invalid IDs Format",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/price?ids=,,,",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "price"
                  ],
                  "query": [
                    {
                      "key": "ids",
                      "value": ",,,"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 400,\n    \"message\": \"IDs must be comma-separated values with no empty items\",\n    \"error\": \"Bad Request\"\n}"
            },
            {
              "name": "Missing IDs Parameter",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/price",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "price"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 400,\n    \"message\": \"Missing required parameter: ids\",\n    \"error\": \"Bad Request\"\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/provider/price?ids=bitcoin",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "provider",
                    "price"
                  ],
                  "query": [
                    {
                      "key": "ids",
                      "value": "bitcoin"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\",\n    \"error\": \"Unauthorized\"\n}"
            }
          ]
        }
      ],
      "_contentHash": "5c0872b58fbf9f7c04ff394d30639732"
    },
    {
      "name": "User",
      "description": "User management endpoints",
      "item": [
        {
          "name": "List Users",
          "description": "Get a paginated list of users.",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has pagination structure\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('meta');",
                  "    pm.expect(jsonData.meta).to.have.property('total');",
                  "    pm.expect(jsonData.meta).to.have.property('page');",
                  "    pm.expect(jsonData.meta).to.have.property('limit');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/users?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": [\n        {\n            \"id\": \"1234567890\",\n            \"email\": \"user1@example.com\",\n            \"createdAt\": \"2023-01-01T00:00:00.000Z\",\n            \"updatedAt\": \"2023-01-01T00:00:00.000Z\"\n        },\n        {\n            \"id\": \"0987654321\",\n            \"email\": \"user2@example.com\",\n            \"createdAt\": \"2023-01-02T00:00:00.000Z\",\n            \"updatedAt\": \"2023-02-15T00:00:00.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"total\": 2,\n        \"page\": 1,\n        \"limit\": 10,\n        \"totalPages\": 1\n    }\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users?page=1&limit=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\",\n    \"error\": \"Unauthorized\"\n}"
            }
          ]
        },
        {
          "name": "Get User by ID",
          "description": "Get details for a specific user by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/users/{{user_id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "users",
                "{{user_id}}"
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/1234567890",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "1234567890"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": {\n        \"id\": \"1234567890\",\n        \"email\": \"user1@example.com\",\n        \"createdAt\": \"2023-01-01T00:00:00.000Z\",\n        \"updatedAt\": \"2023-01-01T00:00:00.000Z\"\n    },\n    \"meta\": {}\n}"
            },
            {
              "name": "User Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/non-existent-id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "non-existent-id"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 404,\n    \"message\": \"User not found\",\n    \"error\": \"Not Found\"\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/1234567890",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "1234567890"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\",\n    \"error\": \"Unauthorized\"\n}"
            }
          ]
        },
        {
          "name": "Create User",
          "description": "Create a new user",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has user ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    ",
                  "    // Store ID for subsequent requests",
                  "    if (jsonData.data) {",
                  "        pm.collectionVariables.set('user_id', jsonData.data);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate unique test email to avoid conflicts",
                  "const testEmail = `test.user.${Date.now()}@example.com`;",
                  "const testPassword = \"Password123!\";",
                  "",
                  "pm.collectionVariables.set('user_test_email', testEmail);",
                  "pm.collectionVariables.set('user_test_password', testPassword);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{user_test_email}}\",\n    \"password\": \"{{user_test_password}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "users"
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"newuser@example.com\",\n    \"password\": \"Password123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": \"1234567890\",\n    \"meta\": {}\n}"
            },
            {
              "name": "Email Already Exists",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"existing@example.com\",\n    \"password\": \"Password123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 409,\n    \"message\": \"Email already exists\",\n    \"error\": \"Conflict\"\n}"
            },
            {
              "name": "Invalid Data",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"invalid-email\",\n    \"password\": \"short\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 400,\n    \"message\": \"Validation failed\",\n    \"error\": \"Bad Request\"\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"newuser@example.com\",\n    \"password\": \"Password123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\",\n    \"error\": \"Unauthorized\"\n}"
            }
          ]
        },
        {
          "name": "Update User",
          "description": "Update an existing user's information",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response indicates success\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.equal(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"updated-user@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/users/{{user_id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "users",
                "{{user_id}}"
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"updated-user@example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/1234567890",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "1234567890"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": true,\n    \"meta\": {}\n}"
            },
            {
              "name": "User Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"updated-user@example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/non-existent-id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "non-existent-id"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 404,\n    \"message\": \"User not found\",\n    \"error\": \"Not Found\"\n}"
            },
            {
              "name": "Invalid Data",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"invalid-email\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/1234567890",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "1234567890"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 400,\n    \"message\": \"Validation failed\",\n    \"error\": \"Bad Request\"\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"updated-user@example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/1234567890",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "1234567890"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\",\n    \"error\": \"Unauthorized\"\n}"
            }
          ]
        },
        {
          "name": "Delete User",
          "description": "Delete an existing user",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response indicates success\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.equal(true);",
                  "    ",
                  "    // Clear user ID as it's no longer valid",
                  "    pm.collectionVariables.unset('user_id');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/{{API_PREFIX}}/users/{{user_id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "{{API_PREFIX}}",
                "users",
                "{{user_id}}"
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/1234567890",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "1234567890"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"data\": true,\n    \"meta\": {}\n}"
            },
            {
              "name": "User Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/non-existent-id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "non-existent-id"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 404,\n    \"message\": \"User not found\",\n    \"error\": \"Not Found\"\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/{{API_PREFIX}}/users/1234567890",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{API_PREFIX}}",
                    "users",
                    "1234567890"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\",\n    \"error\": \"Unauthorized\"\n}"
            }
          ]
        }
      ],
      "_contentHash": "998d8048b6b711a375e561d04f1e7b05"
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "API_PREFIX",
      "value": "api",
      "type": "string"
    }
  ]
}